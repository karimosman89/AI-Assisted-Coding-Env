# AI-Assisted Coding Environment Configuration
# Copy this file to .env and update with your actual values

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
APP_NAME="AI-Assisted Coding Environment"
APP_VERSION="2.0.0"
DESCRIPTION="Enterprise-grade AI-powered development environment"

# Environment: development, staging, production, testing
ENVIRONMENT="development"
DEBUG=true

# Server Configuration
HOST="0.0.0.0"
PORT=8000
WORKERS=1
RELOAD=false

# =============================================================================
# AI PROVIDER CONFIGURATION
# =============================================================================

# OpenAI Configuration
# Get your API key from: https://platform.openai.com/api-keys
OPENAI_API_KEY="sk-your_openai_api_key_here"
OPENAI_MODEL="gpt-4"
OPENAI_MAX_TOKENS=4096
OPENAI_TEMPERATURE=0.3
OPENAI_TIMEOUT=60

# Anthropic Claude Configuration  
# Get your API key from: https://console.anthropic.com/
ANTHROPIC_API_KEY="sk-ant-your_anthropic_api_key_here"
ANTHROPIC_MODEL="claude-3-sonnet-20240229"
ANTHROPIC_MAX_TOKENS=4096
ANTHROPIC_TEMPERATURE=0.3

# Google AI Configuration
# Get your API key from: https://makersuite.google.com/app/apikey
GOOGLE_API_KEY="your_google_api_key_here"
GOOGLE_MODEL="gemini-pro"
GOOGLE_TEMPERATURE=0.3

# AI Provider Priority and Fallback
PRIMARY_AI_PROVIDER="openai"
FALLBACK_AI_PROVIDERS=["anthropic", "google"]

# AI Rate Limiting
AI_REQUESTS_PER_MINUTE=60
AI_MAX_CONCURRENT_REQUESTS=5

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database URL (SQLite for development, PostgreSQL for production)
DATABASE_URL="sqlite:///./ai_coding_env.db"
# For PostgreSQL: "postgresql://user:password@host:port/database"
# For MySQL: "mysql://user:password@host:port/database"

# Connection Pool Settings
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_POOL_TIMEOUT=30
DB_POOL_RECYCLE=3600
DB_ECHO_SQL=false

# =============================================================================
# REDIS CONFIGURATION (for caching and sessions)
# =============================================================================
REDIS_HOST="localhost"
REDIS_PORT=6379
REDIS_PASSWORD=""
REDIS_DB=0
REDIS_SSL=false
REDIS_MAX_CONNECTIONS=10
REDIS_RETRY_ON_TIMEOUT=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Configuration
# Generate a secure secret key: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY="your_super_secret_key_change_this_in_production"
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7
JWT_ALGORITHM="HS256"

# API Security
API_KEY_HEADER="X-API-Key"
ALLOWED_HOSTS=["*"]

# CORS Configuration
CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000", "http://localhost:8080"]
CORS_ALLOW_CREDENTIALS=true
CORS_ALLOW_METHODS=["GET", "POST", "PUT", "DELETE", "OPTIONS"]
CORS_ALLOW_HEADERS=["*"]

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# AI Features
ENABLE_CODE_COMPLETION=true
ENABLE_CODE_GENERATION=true
ENABLE_CODE_ANALYSIS=true
ENABLE_BUG_DETECTION=true
ENABLE_CODE_REFACTORING=true

# Collaboration Features
ENABLE_REAL_TIME_COLLABORATION=true
ENABLE_CODE_SHARING=true
ENABLE_PROJECT_TEMPLATES=true

# Analytics and Monitoring
ENABLE_ANALYTICS=true
ENABLE_PERFORMANCE_MONITORING=true
ENABLE_ERROR_TRACKING=true

# Enterprise Features
ENABLE_SSO=false
ENABLE_AUDIT_LOGGING=true
ENABLE_ADVANCED_PERMISSIONS=false

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_LEVEL="INFO"
LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"
# LOG_FILE="logs/app.log"

# =============================================================================
# PATHS AND DIRECTORIES
# =============================================================================
STATIC_DIR="static"
TEMPLATES_DIR="src/templates"
UPLOAD_DIR="uploads"

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# For production deployment, consider these additional settings:

# SSL/TLS Configuration
# SSL_KEYFILE="path/to/private.key"
# SSL_CERTFILE="path/to/certificate.crt"

# Load Balancer Settings
# FORWARDED_ALLOW_IPS="*"
# PROXY_HEADERS=true

# Monitoring and Metrics
# SENTRY_DSN="your_sentry_dsn_here"
# PROMETHEUS_METRICS=true

# Container/Cloud Settings
# CONTAINER_PORT=8000
# HEALTH_CHECK_PATH="/api/health"

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development-specific settings (only used when ENVIRONMENT=development)
DEV_RELOAD_DIRS=["src"]
DEV_AUTO_RELOAD=true

# Testing Settings (only used when ENVIRONMENT=testing)
TEST_DATABASE_URL="sqlite:///:memory:"
TEST_SKIP_AUTH=true

# =============================================================================
# INTEGRATION SETTINGS
# =============================================================================

# External API Integrations (optional)
# GITHUB_TOKEN="your_github_token"
# SLACK_BOT_TOKEN="your_slack_bot_token"
# DISCORD_BOT_TOKEN="your_discord_bot_token"

# Email Configuration (for notifications)
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT=587
# SMTP_USERNAME="your_email@gmail.com"
# SMTP_PASSWORD="your_app_password"
# SMTP_TLS=true

# =============================================================================
# CLOUD PROVIDER SETTINGS (optional)
# =============================================================================

# AWS Configuration
# AWS_ACCESS_KEY_ID="your_aws_access_key"
# AWS_SECRET_ACCESS_KEY="your_aws_secret_key"
# AWS_REGION="us-west-2"
# AWS_S3_BUCKET="your-s3-bucket"

# Google Cloud Configuration
# GOOGLE_CLOUD_PROJECT="your-project-id"
# GOOGLE_APPLICATION_CREDENTIALS="path/to/service-account.json"

# Azure Configuration
# AZURE_STORAGE_CONNECTION_STRING="your_azure_connection_string"

# =============================================================================
# ADVANCED CONFIGURATION
# =============================================================================

# WebSocket Settings
WS_MAX_CONNECTIONS=100
WS_PING_INTERVAL=20
WS_PING_TIMEOUT=10

# Background Task Settings
# CELERY_BROKER_URL="redis://localhost:6379/0"
# CELERY_RESULT_BACKEND="redis://localhost:6379/0"

# API Versioning
API_VERSION="v1"
API_PREFIX="/api"

# Content Settings
MAX_FILE_SIZE=10485760  # 10MB
ALLOWED_FILE_TYPES=["py", "js", "ts", "java", "cpp", "go", "rs", "txt", "md"]

# Session Settings
SESSION_COOKIE_NAME="session"
SESSION_COOKIE_SECURE=false  # Set to true in production with HTTPS
SESSION_COOKIE_HTTPONLY=true
SESSION_MAX_AGE=86400  # 24 hours

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Use environment-specific values for different deployments
# 3. Rotate API keys and secrets regularly
# 4. Use strong, unique secret keys for production
# 5. Enable HTTPS in production and update CORS settings accordingly
# 6. Consider using container secrets or cloud secret managers for production
# 7. Monitor API usage and adjust rate limits as needed
# 8. Regularly update dependencies and security patches